<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>53.0</apiVersion>
    <assignments>
        <name>Account_check_AR_AW_BR_Task</name>
        <label>Account check (AR,AW,BR) Task</label>
        <locationX>727</locationX>
        <locationY>1832</locationY>
        <assignmentItems>
            <assignToReference>taskRecord.ActivityDate</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>taskAccountCheckDueDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.Description</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>A new account has been created in AR, AW or BR. In the Task of the link below, click &quot;Related To&quot; to go to the account. Change the Account Owner if necessary.</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.Priority</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>C</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Not Started</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.Subject</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Account check (AR,AW,BR)</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.WhatId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>add_task</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>add_task</name>
        <label>add task</label>
        <locationX>727</locationX>
        <locationY>1994</locationY>
        <assignmentItems>
            <assignToReference>taskList</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>taskRecord</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>is_task_needs_to_be_created</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Add_task_to_list</name>
        <label>Add task to list</label>
        <locationX>727</locationX>
        <locationY>1638</locationY>
        <assignmentItems>
            <assignToReference>taskList</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>taskRecord</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Account_new_account_AR_AW_BR</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Create_Task_for_Embargo</name>
        <label>Create Task for Embargo</label>
        <locationX>727</locationX>
        <locationY>1483</locationY>
        <assignmentItems>
            <assignToReference>taskRecord.ActivityDate</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>EmbargoTaskDueDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.Description</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>The created record is for one of the embargo countries. Please check the Export Control Guideline provided by Legal (see https://wiki.u-blox.com/bin/view/Generic/LegalHome ).</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.IsReminderSet</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.Priority</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>C</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.ReminderDateTime</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>EmbargoTimeReminder</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Not Started</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.Subject</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>New Account in one of the embargo countries.</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.WhatId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Add_task_to_list</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Channel_Manager</name>
        <label>Set Channel Manager</label>
        <locationX>735</locationX>
        <locationY>993</locationY>
        <assignmentItems>
            <assignToReference>$Record.Channel_Manager__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Owner.Channel_Manager__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Email_Account_Owner__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Owner.Email</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Email_Channel_Manager__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Owner.Email_Channel_Manager__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>updateFlag</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_Copy_Address_from_Abacus</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Enable when the Account is Linked To Abacus.</description>
        <name>Set_Copy_Address_from_Abacus</name>
        <label>Set Copy Address from Abacus</label>
        <locationX>731</locationX>
        <locationY>1245</locationY>
        <assignmentItems>
            <assignToReference>$Record.Copy_Address_from_Abacus__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.BillingCity</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.ShippingCity</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.BillingState</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.ShippingState</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.BillingStreet</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.ShippingStreet</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.BillingCountry</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.ShippingCountry</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.BillingPostalCode</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.ShippingPostalCode</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Visiting_Address_changed__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>updateFlag</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>embargo_countries</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>set_Lead_Information_to_Lead_values</name>
        <label>set Lead Information to Lead values</label>
        <locationX>734</locationX>
        <locationY>500</locationY>
        <assignmentItems>
            <assignToReference>$Record.Shop_Purchase_Information__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>setLeadInformation</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>updateFlag</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_Lead_Description</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Update_Account_Description</name>
        <label>Update Account Description</label>
        <locationX>730</locationX>
        <locationY>752</locationY>
        <assignmentItems>
            <assignToReference>updateFlag</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Description</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Description_Merged</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Lead_Description__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue></stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Channel_Manager_Mismatch</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Update_Contact_Address</name>
        <label>Update Contact Address</label>
        <locationX>1461</locationX>
        <locationY>2926</locationY>
        <assignmentItems>
            <assignToReference>Iterate_Con_Add.Visiting_Address_changed__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Iterate_Con_Add</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Update_Users_Referral_Agreement</name>
        <label>Update Users Referral Agreement</label>
        <locationX>1223</locationX>
        <locationY>3448</locationY>
        <assignmentItems>
            <assignToReference>Iterate_Users.Referral_Agreement__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Referral_Agreement__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Iterate_Users</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>updateContact</name>
        <label>updateContact</label>
        <locationX>1140</locationX>
        <locationY>2385</locationY>
        <assignmentItems>
            <assignToReference>IterateContacts.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>IterateContacts</targetReference>
        </connector>
    </assignments>
    <decisions>
        <description>To notify Account Owner of newly created account in AR, AW, BR</description>
        <name>Account_new_account_AR_AW_BR</name>
        <label>Account: new account AR,AW,BR</label>
        <locationX>485</locationX>
        <locationY>1731</locationY>
        <defaultConnector>
            <targetReference>is_task_needs_to_be_created</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Account_new_account_AR_AW_BR_Condition</name>
            <conditionLogic>(1 OR 2 OR 3 OR 4 OR 5 OR 6) AND 7</conditionLogic>
            <conditions>
                <leftValueReference>$Record.BillingCountry</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>AR</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BillingCountry</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>AW</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BillingCountry</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>BR</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.ShippingCountry</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>AR</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.ShippingCountry</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>AW</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.ShippingCountry</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>BR</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>isNEW</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Account_check_AR_AW_BR_Task</targetReference>
            </connector>
            <label>Account: new account AR,AW,BR Condition</label>
        </rules>
    </decisions>
    <decisions>
        <name>Account_Owner_Changed</name>
        <label>Account Owner Changed</label>
        <locationX>485</locationX>
        <locationY>2385</locationY>
        <defaultConnector>
            <targetReference>Account_Email_Alerts</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Account_Owner_Changed_Condition</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>getContacts</targetReference>
            </connector>
            <label>Account Owner Changed Condition</label>
        </rules>
    </decisions>
    <decisions>
        <name>Account_visiting_address_change</name>
        <label>Account visiting address change</label>
        <locationX>483</locationX>
        <locationY>2924</locationY>
        <defaultConnector>
            <targetReference>Check_Referral_Agreement</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Address_change</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Visiting_Address_changed__c</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BillingPostalCode</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BillingCity</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BillingCountry</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BillingState</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BillingStreet</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Contacts_for_Address_change</targetReference>
            </connector>
            <label>Address change</label>
        </rules>
    </decisions>
    <decisions>
        <description>Correct Channel Manager and two email fields that are wrongly populated. Made for following action after Lead conversion as it doesn&apos;t update these fields.</description>
        <name>Channel_Manager_Mismatch</name>
        <label>Channel Manager Mismatch</label>
        <locationX>483</locationX>
        <locationY>884</locationY>
        <defaultConnector>
            <targetReference>Check_Copy_Address_from_Abacus</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Channel_Manager_Mismatch_Condition</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner.Email</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.Email_Account_Owner__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Channel_Manager</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Channel Manager Mismatch Condition</label>
        </rules>
    </decisions>
    <decisions>
        <description>Enable this whenever an Account is linked to Abacus.</description>
        <name>Check_Copy_Address_from_Abacus</name>
        <label>Check Copy Address from Abacus</label>
        <locationX>482</locationX>
        <locationY>1129</locationY>
        <defaultConnector>
            <targetReference>embargo_countries</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Copy_Address_from_Abacus_Condition</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Linked_to_Abacus__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>1</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Copy_Address_from_Abacus</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Copy Address from Abacus Condition</label>
        </rules>
    </decisions>
    <decisions>
        <description>This is to add Lead description to Account. Upon conversion of Lead the description is added to the Lead_Description__c field and finally merged to Account Description.</description>
        <name>Check_Lead_Description</name>
        <label>Check Lead Description</label>
        <locationX>480</locationX>
        <locationY>645</locationY>
        <defaultConnector>
            <targetReference>Channel_Manager_Mismatch</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Add_to_Account_Description</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Lead_Description__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Account_Description</targetReference>
            </connector>
            <label>Add to Account Description</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Referral_Agreement</name>
        <label>Check Referral Agreement</label>
        <locationX>483</locationX>
        <locationY>3178</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Account_Referral_Agreement_Condition</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Referral_Agreement__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record__Prior.Referral_Agreement__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Distributor_Name__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Internal</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Distributor_Name__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>get_users</targetReference>
            </connector>
            <label>Account Referral Agreement Condition</label>
        </rules>
    </decisions>
    <decisions>
        <description>Check if it&apos;s for embargo countries</description>
        <name>embargo_countries</name>
        <label>embargo countries</label>
        <locationX>483</locationX>
        <locationY>1385</locationY>
        <defaultConnector>
            <targetReference>Account_new_account_AR_AW_BR</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>embargo_countries_Condition</name>
            <conditionLogic>(1 OR 2 OR 3 OR 4 OR 5 OR 6 OR 7 OR 8 OR 9 OR 10 OR 11 OR 12 OR 13 OR 14 OR 15 OR 16 OR 17 OR 18 OR 19 OR 20 OR 21 ) AND 22</conditionLogic>
            <conditions>
                <leftValueReference>$Record.BillingCountry</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>CU</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BillingCountry</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>BY</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BillingCountry</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>IR</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BillingCountry</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>KP</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BillingCountry</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>SD</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BillingCountry</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>SY</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BillingCountry</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>UA</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BillingCountry</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>AM</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BillingCountry</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>AZ</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BillingCountry</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>CF</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BillingCountry</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>CG</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BillingCountry</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>CI</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BillingCountry</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>ER</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BillingCountry</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>GN</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BillingCountry</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>IQ</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BillingCountry</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>LB</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BillingCountry</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>LR</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BillingCountry</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>LY</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BillingCountry</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>MM</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BillingCountry</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>SO</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BillingCountry</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>ZW</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>isNEW</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_Task_for_Embargo</targetReference>
            </connector>
            <label>embargo countries Condition</label>
        </rules>
    </decisions>
    <decisions>
        <name>is_task_needs_to_be_created</name>
        <label>is task needs to be created</label>
        <locationX>486</locationX>
        <locationY>2083</locationY>
        <defaultConnector>
            <targetReference>Account_Owner_Changed</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>is_task_needs_to_be_created_condition</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>taskList</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>create_tasks</targetReference>
            </connector>
            <label>is task needs to be created condition</label>
        </rules>
    </decisions>
    <decisions>
        <name>isAccountsToUpdate</name>
        <label>isAccountsToUpdate</label>
        <locationX>490</locationX>
        <locationY>3716</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>isAccountsToUpdate_Condition</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>updateFlag</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>updateFlagEmail</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>updateAccounts</targetReference>
            </connector>
            <label>isAccountsToUpdate Condition</label>
        </rules>
    </decisions>
    <decisions>
        <description>Populate Account fields for online shop history after Lead conversion</description>
        <name>Lead_conversion_set_Account_fields_for_shop_purchase</name>
        <label>Lead conversion: set Account fields for shop purchase</label>
        <locationX>481</locationX>
        <locationY>375</locationY>
        <defaultConnector>
            <targetReference>Check_Lead_Description</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Lead_conversion_set_Account_fields_for_shop_purchase_condition</name>
            <conditionLogic>(1 OR 2) AND 3</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Lead_Purchased_Items__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Lead_Qualification_Notes__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>isNEW</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>set_Lead_Information_to_Lead_values</targetReference>
            </connector>
            <label>Lead conversion: set Account fields for shop purchase condition</label>
        </rules>
    </decisions>
    <description>After flow trigger on Account to update fields
Send Email Alerts
Chatter Posts</description>
    <environments>Default</environments>
    <formulas>
        <name>Description_Merged</name>
        <dataType>String</dataType>
        <expression>{!$Record.Description} +&apos; &apos; +{!$Record.Lead_Description__c}</expression>
    </formulas>
    <formulas>
        <name>EmbargoTaskDueDate</name>
        <dataType>Date</dataType>
        <expression>TODAY()+7</expression>
    </formulas>
    <formulas>
        <name>EmbargoTimeReminder</name>
        <dataType>DateTime</dataType>
        <expression>NOW()+7</expression>
    </formulas>
    <formulas>
        <name>isNEW</name>
        <dataType>Boolean</dataType>
        <expression>ISNEW()</expression>
    </formulas>
    <formulas>
        <name>setLeadInformation</name>
        <dataType>String</dataType>
        <expression>if(len(text( {!$Record.Lead_Date_Shop_Order__c}))=0,&quot;&quot;,&quot;Date online shop purchase: &quot; &amp; text({!$Record.Lead_Date_Shop_Order__c}) &amp; BR()) &amp;
if (len({!$Record.Lead_Purchased_Items__c})=0,&quot;&quot;,{!$Record.Lead_Purchased_Items__c} &amp; BR()) &amp;
if(len({!$Record.Lead_Qualification_Notes__c})=0,&quot;&quot;, BR() &amp; {!$Record.Lead_Qualification_Notes__c})</expression>
    </formulas>
    <formulas>
        <name>taskAccountCheckDueDate</name>
        <dataType>Date</dataType>
        <expression>TODAY()+3</expression>
    </formulas>
    <interviewLabel>Account: After Created/Updated {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Account: After Created/Updated</label>
    <loops>
        <name>Iterate_Con_Add</name>
        <label>Iterate Con Add</label>
        <locationX>1099</locationX>
        <locationY>2926</locationY>
        <collectionReference>Contacts_for_Address_change</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Update_Contact_Address</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Update_Contact_addresses</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>Iterate_Users</name>
        <label>Iterate Users</label>
        <locationX>864</locationX>
        <locationY>3464</locationY>
        <collectionReference>get_users</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Update_Users_Referral_Agreement</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Update_Users</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>IterateContacts</name>
        <label>IterateContacts</label>
        <locationX>935</locationX>
        <locationY>2386</locationY>
        <collectionReference>getContacts</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>updateContact</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>updateContacts</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>create_tasks</name>
        <label>create tasks</label>
        <locationX>722</locationX>
        <locationY>2211</locationY>
        <connector>
            <targetReference>Account_Owner_Changed</targetReference>
        </connector>
        <inputReference>taskList</inputReference>
    </recordCreates>
    <recordLookups>
        <name>Contacts_for_Address_change</name>
        <label>Contacts for Address change</label>
        <locationX>797</locationX>
        <locationY>2931</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Iterate_Con_Add</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Check_Referral_Agreement</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Left_the_company__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Registered_Community_User__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>get_users</name>
        <label>get users</label>
        <locationX>492</locationX>
        <locationY>3463</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Iterate_Users</targetReference>
        </connector>
        <faultConnector>
            <targetReference>isAccountsToUpdate</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Distributor_Name__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Distributor_Name__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>IsActive</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Distributor_Name__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Distributor_Name__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Internal</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getContacts</name>
        <label>getContacts</label>
        <locationX>769</locationX>
        <locationY>2386</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>IterateContacts</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Account_Email_Alerts</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Contact_addresses</name>
        <label>Update Contact addresses</label>
        <locationX>1104</locationX>
        <locationY>3224</locationY>
        <connector>
            <targetReference>Check_Referral_Agreement</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Check_Referral_Agreement</targetReference>
        </faultConnector>
        <inputReference>Contacts_for_Address_change</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Users</name>
        <label>Update Users</label>
        <locationX>868</locationX>
        <locationY>3713</locationY>
        <connector>
            <targetReference>isAccountsToUpdate</targetReference>
        </connector>
        <faultConnector>
            <targetReference>isAccountsToUpdate</targetReference>
        </faultConnector>
        <inputReference>Iterate_Users</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>updateAccounts</name>
        <label>updateAccounts</label>
        <locationX>506</locationX>
        <locationY>3969</locationY>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>updateContacts</name>
        <label>updateContacts</label>
        <locationX>944</locationX>
        <locationY>2713</locationY>
        <connector>
            <targetReference>Account_Email_Alerts</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Account_Email_Alerts</targetReference>
        </faultConnector>
        <inputReference>getContacts</inputReference>
    </recordUpdates>
    <start>
        <locationX>362</locationX>
        <locationY>50</locationY>
        <connector>
            <targetReference>Lead_conversion_set_Account_fields_for_shop_purchase</targetReference>
        </connector>
        <object>Account</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <subflows>
        <name>Account_Email_Alerts</name>
        <label>Account Email Alerts</label>
        <locationX>491</locationX>
        <locationY>2717</locationY>
        <connector>
            <targetReference>Account_visiting_address_change</targetReference>
        </connector>
        <flowName>Account_Email_Alerts</flowName>
        <inputAssignments>
            <name>isRecordNew</name>
            <value>
                <elementReference>isNEW</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>Record</name>
            <value>
                <elementReference>$Record</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>Record_Prior</name>
            <value>
                <elementReference>$Record__Prior</elementReference>
            </value>
        </inputAssignments>
        <outputAssignments>
            <assignToReference>$Record</assignToReference>
            <name>Record</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>updateFlagEmail</assignToReference>
            <name>updateFlagEmail</name>
        </outputAssignments>
    </subflows>
    <variables>
        <name>ContactsLst</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Contact</objectType>
    </variables>
    <variables>
        <name>taskList</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Task</objectType>
    </variables>
    <variables>
        <name>taskRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Task</objectType>
    </variables>
    <variables>
        <name>updateFlag</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>updateFlagEmail</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
