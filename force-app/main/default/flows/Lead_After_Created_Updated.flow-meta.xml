<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>53.0</apiVersion>
    <assignments>
        <name>add_task</name>
        <label>add task</label>
        <locationX>666</locationX>
        <locationY>1269</locationY>
        <assignmentItems>
            <assignToReference>taskList</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>taskRecord</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Create_PartnerRole_on_IsConverted</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Add_task_to_List</name>
        <label>Add task to List</label>
        <locationX>663</locationX>
        <locationY>615</locationY>
        <assignmentItems>
            <assignToReference>taskList</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>taskRecord</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>IsConverted_with_Opportunity</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Add_task_to_lsst</name>
        <label>Add task to lsst</label>
        <locationX>663</locationX>
        <locationY>951</locationY>
        <assignmentItems>
            <assignToReference>taskList</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>taskRecord</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>IsConverted_without_Opportunity</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Create_a_Completed_Task</name>
        <label>Create a Completed Task</label>
        <locationX>663</locationX>
        <locationY>466</locationY>
        <assignmentItems>
            <assignToReference>taskRecord.CurrencyIsoCode</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>USD</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.Description</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Description</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.Priority</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>C</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.Subject</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Digi-Key Order</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.Type</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Other</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.WhoId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Description</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Generated by Digi-Key order</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>updateFlag</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Add_task_to_List</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Create_completed_task</name>
        <label>Create completed task</label>
        <locationX>663</locationX>
        <locationY>778</locationY>
        <assignmentItems>
            <assignToReference>taskRecord.ActivityDate</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Exhibition__r.Start_Date__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.Exhibition__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Exhibition__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.CreatedById</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.Subject</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>{!$Record.Exhibition__r.Name}  (created on Lead conversion)</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.Type</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Trade show visit</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.WhoId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.ConvertedContactId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.WhatId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.ConvertedOpportunityId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Add_task_to_lsst</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Created_task_when_no_Opportunity_created</name>
        <label>Created task when no Opportunity created</label>
        <locationX>666</locationX>
        <locationY>1107</locationY>
        <assignmentItems>
            <assignToReference>taskRecord.ActivityDate</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>today</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.Description</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>taskDescription</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.CreatedById</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.Subject</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Lead conversion (no Opportunity generated)</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.Type</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Other</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.WhoId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.ConvertedContactId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.WhatId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.ConvertedAccountId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>add_task</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>New_Lead_in_one_of_the_embargo_countries</name>
        <label>New Lead in one of the embargo countries</label>
        <locationX>661</locationX>
        <locationY>1748</locationY>
        <assignmentItems>
            <assignToReference>taskRecord.ActivityDate</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>LeadTaskDueDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.Description</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>The created record is for one of the embargo countries. Please check the Export Control Guideline provided by Legal (see https://wiki.u-blox.com/bin/view/Generic/LegalHome ).</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.Priority</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>C</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Not Started</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.Subject</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>New Lead in one of the embargo countries</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.WhoId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>task_add</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>task_add</name>
        <label>task add</label>
        <locationX>661</locationX>
        <locationY>1910</locationY>
        <assignmentItems>
            <assignToReference>taskList</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>taskRecord</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Is_Task_Created</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Create_PartnerRole_on_IsConverted</name>
        <label>Create PartnerRole on IsConverted</label>
        <locationX>398</locationX>
        <locationY>1345</locationY>
        <defaultConnector>
            <targetReference>Embargo_countries</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Create_PartnerRole_on_IsConverted_Condition</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.IsConverted</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Lead_Source_Account__r.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.ConvertedOpportunityId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_Partner_Role_record</targetReference>
            </connector>
            <label>Create PartnerRole on IsConverted Condition</label>
        </rules>
    </decisions>
    <decisions>
        <description>Reminder that the created record is for embargo countries</description>
        <name>Embargo_countries</name>
        <label>Embargo countries</label>
        <locationX>396</locationX>
        <locationY>1647</locationY>
        <defaultConnector>
            <targetReference>Is_Task_Created</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Embargo_countries_condition</name>
            <conditionLogic>(1 OR 2 OR 3 OR 4 OR 5 OR 6 OR 7 OR 8 OR 9 OR 10 OR 11 OR 12 OR 13 OR 14 OR 15 OR 16 OR 17 OR 18 OR 19 OR 20 OR 21 ) AND 22 AND 23</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Country</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>CU</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Country</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>BY</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Country</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>IR</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Country</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>KP</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Country</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>SD</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Country</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>SY</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Country</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>UA</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Country</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>AM</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Country</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>AZ</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Country</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>CF</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Country</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>CG</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Country</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>CI</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Country</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>ER</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Country</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>GN</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Country</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>IQ</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Country</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>LB</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Country</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>LR</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Country</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>LY</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Country</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>MM</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Country</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>SO</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Country</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>ZW</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>isNEW</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:User.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>New_Lead_in_one_of_the_embargo_countries</targetReference>
            </connector>
            <label>Embargo countries condition</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Task_Created</name>
        <label>Is Task Created</label>
        <locationX>396</locationX>
        <locationY>2010</locationY>
        <defaultConnector>
            <targetReference>Lead_Description_on_conversion</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Is_Task_Created_Condition</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>taskList</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>create_tasks</targetReference>
            </connector>
            <label>Is Task Created Condition</label>
        </rules>
    </decisions>
    <decisions>
        <name>IsConverted_with_Opportunity</name>
        <label>IsConverted with Opportunity</label>
        <locationX>398</locationX>
        <locationY>692</locationY>
        <defaultConnector>
            <targetReference>IsConverted_without_Opportunity</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>IsConverted_with_Opportunity_Condition</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Exhibition__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.IsConverted</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.CreatedBy.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_completed_task</targetReference>
            </connector>
            <label>IsConverted with Opportunity Condition</label>
        </rules>
    </decisions>
    <decisions>
        <name>IsConverted_without_Opportunity</name>
        <label>IsConverted without Opportunity</label>
        <locationX>398</locationX>
        <locationY>1023</locationY>
        <defaultConnector>
            <targetReference>Create_PartnerRole_on_IsConverted</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>IsConverted_without_Opportunity_Condition</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.IsConverted</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.ConvertedOpportunityId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.LeadSource</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Digi-Key</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.LeadSource</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.CreatedBy.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Created_task_when_no_Opportunity_created</targetReference>
            </connector>
            <label>IsConverted without Opportunity Condition</label>
        </rules>
    </decisions>
    <decisions>
        <name>Lead_Description_on_conversion</name>
        <label>Lead Description on conversion</label>
        <locationX>397</locationX>
        <locationY>2258</locationY>
        <defaultConnector>
            <targetReference>Send_Email_Alerts</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Lead_Description_to_Account_Description</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.IsConverted</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.ConvertedAccountId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Description</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Account_Description</targetReference>
            </connector>
            <label>Lead Description to Account Description</label>
        </rules>
    </decisions>
    <decisions>
        <name>Lead_Source_Digi_Key</name>
        <label>Lead Source=Digi-Key</label>
        <locationX>399</locationX>
        <locationY>391</locationY>
        <defaultConnector>
            <targetReference>IsConverted_with_Opportunity</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Lead_Source_Digi_Key_Condition</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.LeadSource</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Digi-Key</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>isNEW</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_a_Completed_Task</targetReference>
            </connector>
            <label>Lead Source=Digi-Key Condition</label>
        </rules>
    </decisions>
    <decisions>
        <name>update_Lead</name>
        <label>update Lead</label>
        <locationX>398</locationX>
        <locationY>2662</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>update_lead_condition</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>updateFlag</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>updateFlagEmail</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>updateLeads</targetReference>
            </connector>
            <label>update lead condition</label>
        </rules>
    </decisions>
    <description>After flow trigger on Lead to update fields
Create Tasks
Send Email Alerts</description>
    <environments>Default</environments>
    <formulas>
        <name>AccountCheckDueDate</name>
        <dataType>Date</dataType>
        <expression>TODAY()+3</expression>
    </formulas>
    <formulas>
        <name>isNEW</name>
        <dataType>Boolean</dataType>
        <expression>ISNEW()</expression>
    </formulas>
    <formulas>
        <name>LeadTaskDueDate</name>
        <dataType>Date</dataType>
        <expression>TODAY() + 7</expression>
    </formulas>
    <formulas>
        <name>today</name>
        <dataType>Date</dataType>
        <expression>TODAY()</expression>
    </formulas>
    <interviewLabel>Lead: After Created/Updated {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Lead: After Created/Updated</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Create_Partner_Role_record</name>
        <label>Create Partner Role record</label>
        <locationX>666</locationX>
        <locationY>1493</locationY>
        <connector>
            <targetReference>Embargo_countries</targetReference>
        </connector>
        <inputAssignments>
            <field>Opportunity_Account__c</field>
            <value>
                <elementReference>$Record.ConvertedAccountId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Opportunity__c</field>
            <value>
                <elementReference>$Record.ConvertedOpportunityId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Partner_Account__c</field>
            <value>
                <elementReference>$Record.Lead_Source_Account__r.Id</elementReference>
            </value>
        </inputAssignments>
        <object>Partner_Role__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>create_tasks</name>
        <label>create tasks</label>
        <locationX>663</locationX>
        <locationY>2131</locationY>
        <connector>
            <targetReference>Lead_Description_on_conversion</targetReference>
        </connector>
        <inputReference>taskList</inputReference>
    </recordCreates>
    <recordUpdates>
        <name>Update_Account_Description</name>
        <label>Update Account Description</label>
        <locationX>659</locationX>
        <locationY>2366</locationY>
        <connector>
            <targetReference>Send_Email_Alerts</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Send_Email_Alerts</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ConvertedAccountId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Lead_Description__c</field>
            <value>
                <elementReference>$Record.Description</elementReference>
            </value>
        </inputAssignments>
        <object>Account</object>
    </recordUpdates>
    <recordUpdates>
        <name>updateLeads</name>
        <label>update Leads</label>
        <locationX>406</locationX>
        <locationY>2871</locationY>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>282</locationX>
        <locationY>28</locationY>
        <connector>
            <targetReference>Lead_Source_Digi_Key</targetReference>
        </connector>
        <object>Lead</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <subflows>
        <name>Send_Email_Alerts</name>
        <label>Send Email Alerts</label>
        <locationX>406</locationX>
        <locationY>2484</locationY>
        <connector>
            <targetReference>update_Lead</targetReference>
        </connector>
        <flowName>Lead_Email_Alert</flowName>
        <inputAssignments>
            <name>IsRecordNew</name>
            <value>
                <elementReference>isNEW</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>Record</name>
            <value>
                <elementReference>$Record</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>Record_Prior</name>
            <value>
                <elementReference>$Record__Prior</elementReference>
            </value>
        </inputAssignments>
        <outputAssignments>
            <assignToReference>$Record</assignToReference>
            <name>Record</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>updateFlagEmail</assignToReference>
            <name>updateFlag</name>
        </outputAssignments>
    </subflows>
    <textTemplates>
        <name>taskDescription</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>Lead source: {!$Record.LeadSource}
Project name: {!$Record.Project_Name__c}
Project description: {!$Record.Project_Description__c}
Application: {!$Record.New_Application_Type__c}
Planned annual quantity: {!$Record.Annual_Quantity__c}
Production start: {!$Record.Date_Production__c}
Product of interest: {!$Record.Products_Of_Interest__c}
Request: {!$Record.Request__c}
Description: {!$Record.Description}</text>
    </textTemplates>
    <variables>
        <name>taskList</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Task</objectType>
    </variables>
    <variables>
        <name>taskRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Task</objectType>
    </variables>
    <variables>
        <name>updateFlag</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>updateFlagEmail</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
